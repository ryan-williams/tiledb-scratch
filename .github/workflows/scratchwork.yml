name: segfault repro
on:
  workflow_dispatch:
    inputs:
      runs-on:
        description: 'Select a runner ("macos-latest" = Intel, "macos-latest-xlarge" = M1)'
        default: 'macos-latest-xlarge'
        type: choice
        options:
          - macos-latest
          - macos-latest-xlarge
          - ubuntu-latest
          # - windows-latest
      ref:
        description: 'Branch or tag clone/install/test (leave blank to install latest version from PyPI)'
        default: 'main'
jobs:
  build:
    name: repro (${{ inputs.runs-on }})
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - name: Clone TileDB-SOMA@${{ inputs.ref }}
        if: ${{ inputs.ref != '' }}
        uses: actions/checkout@v4
        with:
          repository: single-cell-data/TileDB-SOMA
          ref: ${{ inputs.ref }}
          path: tiledbsoma
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11.8
      - run: |
          if [ -d tiledbsoma ]; then
            echo "Installing TileDB-SOMA from source"
            cd tiledbsoma
            echo "1.9.0rc0" > apis/python/RELEASE-VERSION
            pip install -e apis/python
          else
            echo "Installing TileDB-SOMA from PyPI"
            pip install tiledbsoma
          fi
      - run: pip list
      - name: Show TileDB/SOMA/OS versions
        run: |
          python -c 'import tiledbsoma; tiledbsoma.show_package_versions()'
          uname -a
      - name: 'Run without importing `tiledb` (always succeeds)'
        run: ./segfault-repro.py
      - name: 'Run with `import tiledb` before `import tiledbsoma` (sometimes segfaults)'
        env:
          IMPORT_TILEDB: 1
        run: |
          ./segfault-repro.py
          rv=$?
          echo "Exit code: $?"
          exit $rv
